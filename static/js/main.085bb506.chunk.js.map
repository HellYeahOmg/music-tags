{"version":3,"sources":["components/Tags/assets/genre.svg","components/Tags/assets/mood.svg","components/Tags/assets/list.svg","components/Tags/assets/arrow.svg","components/Tags/queries/genreList.js","components/Tags/queries/moodList.js","components/Tags/queries/songsCount.js","components/Tags/SelectTab.js","components/Tags/MoodTab.js","components/Tags/GenreTab.js","components/Tags/SelectedTags.js","components/Tags/Songs.js","components/Tags/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","gql","_templateObject","moodList_templateObject","songsCount_templateObject","SelectTab","_ref","genreIcon","currentTab","handleActiveTab","moodIcon","react_default","a","createElement","className","width","height","viewBox","fill","xmlns","id","mask-type","maskUnits","x","y","fillRule","clipRule","d","mask","onClick","MoodTab","moods","handleAddType","handleRemoveType","map","item","index","choosed","key","title","GenreTab","genres","listIcon","handleShowChildren","showChildren","handleHideChildren","parent","getChildsCount","count","childs","forEach","child","Fragment","src","arrowIcon","alt","length","SelectedTags","selectedTypes","type","concat","Songs","songs","Tags","state","e","_this","setState","target","tag","_this$state","changedTag","Object","objectSpread","genreIndex","findIndex","parentIndex","childIndex","changedGenres","toConsumableArray","moodIndex","changedMoods","arr","push","loadSongs","_this$state2","selectedIndex","splice","componentDidMount","props","client","query","genreList","then","data","demoValues","moodList","_ref2","valueIds","songsCount","variables","_ref3","demoMediafilesCount","items","getGenres","_this$state3","_this$state4","this","SelectTab_SelectTab","GenreTab_GenreTab","MoodTab_MoodTab","SelectedTags_SelectedTags","Songs_Songs","React","Component","withApollo","ApolloClient","uri","credentials","App","react_apollo_esm","components_Tags","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.085bb506.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/genre.69eeacc1.svg\";","module.exports = __webpack_public_path__ + \"static/media/mood.12215efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.59c79e23.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.11dd9761.svg\";","import gql from \"graphql-tag\";\n\nexport default gql`\n  {\n    demoValues(attributeId: 1) {\n      title\n      id\n      childs {\n        id\n        title\n      }\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\nexport default gql`\n  {\n    demoValues(attributeId: 7) {\n      title\n      id\n      childs {\n        id\n        title\n      }\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\nexport default gql`\n  query($valueIds: [Int]) {\n    demoMediafilesCount(valueIds: $valueIds)\n  }\n`;\n","import React from \"react\";\n\nexport const SelectTab = ({\n  genreIcon,\n  currentTab,\n  moodIcon,\n  handleActiveTab\n}) => (\n  <div className=\"tags__type\">\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <mask\n        id=\"a\"\n        mask-type=\"alpha\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"0\"\n        y=\"0\"\n        width=\"24\"\n        height=\"24\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M18.5746 5.05114C16.7684 3.2448 14.3676 2.25 11.8125 2.25H11.8117C9.25781 2.25 6.85691 3.24461 5.05076 5.05061C3.24461 6.85676 2.25 9.258 2.25 11.8123C2.24963 14.3664 3.24461 16.7679 5.0508 18.574C6.85729 20.3802 9.25856 21.375 11.8129 21.375H11.8136C14.3676 21.375 16.7685 20.3804 18.5746 18.5742C20.3807 16.7679 21.3754 14.3664 21.375 11.8123C21.3754 9.25856 20.3807 6.85729 18.5746 5.05114ZM17.2485 17.2484C15.7969 18.7004 13.8666 19.5 11.8136 19.5H11.8128C9.75949 19.5 7.82884 18.7004 6.3768 17.2482C4.92443 15.7961 4.125 13.8657 4.125 11.8123C4.125 9.75896 4.9248 7.82831 6.37684 6.37646C7.8285 4.92443 9.75877 4.125 11.8129 4.125H11.8136C13.8666 4.125 15.7969 4.92461 17.2489 6.37684C18.7006 7.82888 19.5 9.75915 19.5 11.8123C19.5 13.8657 18.7006 15.7963 17.2485 17.2484ZM11.8125 7.125H11.8121C10.5604 7.125 9.3834 7.61261 8.49791 8.49791C7.61243 9.38321 7.125 10.5604 7.125 11.8125C7.125 14.3972 9.22778 16.5 11.8125 16.5H11.8129C13.065 16.5 14.2419 16.0124 15.1271 15.1271C16.0126 14.2418 16.5 13.0646 16.5 11.8125C16.5 10.5604 16.0126 9.38344 15.1271 8.4981C14.2419 7.61261 13.0646 7.125 11.8125 7.125ZM13.8014 13.8012C13.27 14.3326 12.564 14.625 11.8129 14.625H11.8125C10.2616 14.625 9 13.3634 9 11.8125C9 11.0612 9.29261 10.355 9.82399 9.82361C10.355 9.29243 11.0614 9 11.8125 9H11.8129C13.3634 9 14.625 10.2616 14.625 11.8125C14.625 12.5638 14.3324 13.27 13.8014 13.8012ZM13.125 11.8125C13.125 12.5374 12.5374 13.125 11.8125 13.125C11.0876 13.125 10.5 12.5374 10.5 11.8125C10.5 11.0876 11.0876 10.5 11.8125 10.5C12.5374 10.5 13.125 11.0876 13.125 11.8125Z\"\n          fill=\"#000\"\n        />\n      </mask>\n      <g mask=\"url(#a)\">\n        <rect\n          width=\"24\"\n          height=\"24\"\n          fill={currentTab === \"genres\" ? \"#0077C2\" : \"#969696\"}\n        />\n      </g>\n    </svg>\n    <span\n      onClick={handleActiveTab}\n      id=\"genres\"\n      className={currentTab === \"genres\" ? \"active\" : \"\"}\n    >\n      жанр\n    </span>\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <mask\n        id=\"mask0\"\n        mask-type=\"alpha\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"0\"\n        y=\"0\"\n        width=\"24\"\n        height=\"24\"\n      >\n        <path\n          d=\"M20.9969 10.3114C20.9969 5.2455 16.8752 1.12354 11.8091 1.12354C6.74295 1.12354 2.625 5.24501 2.625 10.311C2.625 14.5954 5.43401 18.4539 9.10118 19.7695L7.93793 23.2502H15.3053L14.148 19.7873C17.5965 18.4836 20.9969 14.5893 20.9969 10.3114ZM10.5418 21.3752L10.9347 20.1989C11.5303 20.2662 11.9463 20.2572 12.3165 20.2232L12.7014 21.3752H10.5418ZM13.5549 18.0123C9.37087 19.6413 4.50004 15.3067 4.50004 10.3109C4.50004 6.27881 7.77679 2.9985 11.8091 2.9985C15.8413 2.9985 19.1218 6.27881 19.1218 10.3109C19.1218 13.6594 16.2963 16.945 13.5549 18.0123ZM6.87004 13.576L8.51359 12.6737C6.81251 9.57577 8.74586 6.48472 11.625 6.37519V4.50274C7.20064 4.6707 4.52846 9.31181 6.87004 13.576Z\"\n          fill=\"black\"\n        />\n      </mask>\n      <g mask=\"url(#mask0)\">\n        <rect\n          width=\"24\"\n          height=\"24\"\n          fill={currentTab === \"mood\" ? \"#0077C2\" : \"#969696\"}\n        />\n      </g>\n    </svg>\n\n    <span\n      onClick={handleActiveTab}\n      id=\"mood\"\n      className={currentTab === \"mood\" ? \"active\" : \"\"}\n    >\n      настроение\n    </span>\n  </div>\n);\n","import React from \"react\";\nexport const MoodTab = ({ moods, handleAddType, handleRemoveType }) => (\n  <div className=\"tags__list\">\n    {moods.map((item, index) => {\n      return (\n        <div\n          className={\n            item.choosed\n              ? \"tags__list-item tags__list-item--mood--active\"\n              : \"tags__list-item tags__list-item--mood\"\n          }\n          key={index}\n        >\n          <span\n            onClick={() => {\n              handleAddType(item);\n            }}\n          >\n            {item.title}\n          </span>\n          {item.choosed && (\n            <span\n              onClick={() => {\n                handleRemoveType(item);\n              }}\n              className=\"tags__list-remove\"\n            >\n              X\n            </span>\n          )}\n        </div>\n      );\n    })}\n  </div>\n);\n","import React from \"react\";\nimport arrowIcon from \"./assets/arrow.svg\";\n\nexport const GenreTab = ({\n  genres,\n  listIcon,\n  handleAddType,\n  handleShowChildren,\n  handleRemoveType,\n  showChildren,\n  handleHideChildren,\n  parent\n}) => {\n  const getChildsCount = item => {\n    let count = 0;\n    item.childs.forEach(child => {\n      if (child.choosed === true) {\n        count++;\n      }\n    });\n    return count;\n  };\n  return (\n    <div className=\"tags__list\">\n      <>\n        {showChildren && (\n          <div className=\"tags__child-info\">\n            <span onClick={handleHideChildren} className=\"tags__child-back\">\n              <img src={arrowIcon} alt=\"назад\" />\n            </span>\n            <span>{parent.title}</span>\n          </div>\n        )}\n        {genres.map((item, index) => {\n          return (\n            <div\n              className={\n                item.choosed\n                  ? \"tags__list-item tags__list-item--genre--active\"\n                  : \"tags__list-item tags__list-item--genre\"\n              }\n              key={index}\n            >\n              <span\n                onClick={() => {\n                  handleAddType(item);\n                }}\n              >\n                {item.title}\n              </span>\n              {item.choosed && (\n                <span\n                  onClick={() => {\n                    handleRemoveType(item);\n                  }}\n                  className=\"tags__list-remove\"\n                >\n                  X\n                </span>\n              )}\n              {item.childs && item.childs.length !== 0 && (\n                <>\n                  <img\n                    onClick={() => {\n                      handleShowChildren(item);\n                    }}\n                    className=\"tags__list-expand\"\n                    src={listIcon}\n                    alt=\"посмотреть поджанры\"\n                  />\n                  {getChildsCount(item) > 0 && (\n                    <span className=\"tags__list-count\">\n                      {getChildsCount(item)}\n                    </span>\n                  )}\n                </>\n              )}\n            </div>\n          );\n        })}\n      </>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const SelectedTags = ({ selectedTypes, handleRemoveType }) => (\n  <div className=\"tags__choosed\">\n    <span className=\"tags__choosed-title\">Выбранные характеристики: </span>\n    {selectedTypes.map((item, index) => {\n      return (\n        <div\n          className={\n            item.type === \"genres\"\n              ? \"tags__choosed-item--genre tags__choosed-item\"\n              : \"tags__choosed-item--mood tags__choosed-item\"\n          }\n          key={index}\n        >\n          {`${item.title} `}\n          <span\n            onClick={() => {\n              handleRemoveType(item);\n            }}\n            className=\"tags__choosed-remove\"\n          >\n            X\n          </span>\n        </div>\n      );\n    })}\n  </div>\n);\n","import React from \"react\";\n\nexport const Songs = ({ songs }) => (\n  <div className=\"tags__songs\">\n    <span className=\"tags__songs-title\">Подобрано треков</span>\n    <span className=\"tags__songs-count\">{songs}</span>\n    <button className=\"tags__btn\">Продолжить</button>\n  </div>\n);\n","import React from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport genreList from \"./queries/genreList\";\nimport moodList from \"./queries/moodList\";\nimport songsCount from \"./queries/songsCount\";\nimport \"./styles.sass\";\nimport genreIcon from \"./assets/genre.svg\";\nimport moodIcon from \"./assets/mood.svg\";\nimport listIcon from \"./assets/list.svg\";\nimport { SelectTab } from \"./SelectTab\";\nimport { MoodTab } from \"./MoodTab\";\nimport { GenreTab } from \"./GenreTab\";\nimport { SelectedTags } from \"./SelectedTags\";\nimport { Songs } from \"./Songs\";\n\nclass Tags extends React.Component {\n  state = {\n    selectedTypes: [],\n    currentTab: \"genres\",\n    genres: [],\n    moods: [],\n    songs: 0,\n    showChildren: false,\n    parent: {}\n  };\n\n  // активная вкладка\n  handleActiveTab = e => {\n    this.setState({ currentTab: e.target.id });\n  };\n\n  // добавить тег в список\n  handleAddType = tag => {\n    const {\n      selectedTypes,\n      currentTab,\n      genres,\n      moods,\n      showChildren,\n      parent\n    } = this.state;\n    const changedTag = { ...tag, choosed: true, type: currentTab };\n    const genreIndex = genres.findIndex(item => item.id === tag.id);\n    if (showChildren) {\n      // если выбран \"ребенок\"\n      const parentIndex = genres.findIndex(item => item.id === parent.id);\n      const childIndex = parent.childs.findIndex(item => item.id === tag.id);\n      const changedGenres = [...genres];\n      changedGenres[parentIndex].childs[childIndex] = changedTag;\n      this.setState({ genres: changedGenres });\n    }\n    if (genreIndex !== -1) {\n      // тип тега - жанр\n      const changedGenres = [...genres];\n      changedGenres[genreIndex] = changedTag;\n      this.setState({ genres: changedGenres });\n    } else {\n      // тип тега - настроение\n      const moodIndex = moods.findIndex(item => item.id === tag.id);\n      const changedMoods = [...moods];\n      changedMoods[moodIndex] = changedTag;\n      this.setState({ moods: changedMoods });\n    }\n    const selectedIndex = selectedTypes.findIndex(item => item.id === tag.id);\n    if (selectedIndex === -1) {\n      // избежать дубликатов. Можно было использовать Set, но Set и spread оператор не дружат\n      const arr = [...selectedTypes];\n      arr.push(changedTag);\n      this.setState({ selectedTypes: arr }, () => {\n        this.loadSongs();\n      });\n    }\n  };\n\n  // удалить тег из списка\n  handleRemoveType = tag => {\n    const { selectedTypes, genres, moods } = this.state;\n    const changedTag = { ...tag, choosed: false };\n    const genreIndex = genres.findIndex(item => item.id === tag.id);\n    if (genreIndex !== -1) {\n      // тип тега - жанр\n      const changedGenres = [...genres];\n      changedGenres[genreIndex] = changedTag;\n      // отменить выбор \"ребенка\"\n      changedGenres.forEach(parent => {\n        if (parent.childs && parent.childs.length) {\n          const childIndex = parent.childs.findIndex(\n            child => child.id === tag.id\n          );\n          if (childIndex !== -1) {\n            const parentIndex = changedGenres.findIndex(\n              item => item.id === parent.id\n            );\n            changedGenres[parentIndex].childs[childIndex] = changedTag;\n          }\n        }\n      });\n      this.setState({ genres: changedGenres });\n    } else {\n      // тип тега - настроение\n      const moodIndex = moods.findIndex(item => item.id === tag.id);\n      const changedMoods = [...moods];\n      changedMoods[moodIndex] = changedTag;\n      this.setState({ moods: changedMoods });\n    }\n    const selectedIndex = selectedTypes.findIndex(item => item.id === tag.id);\n    const arr = [...selectedTypes];\n    arr.splice(selectedIndex, 1);\n    this.setState({ selectedTypes: arr });\n  };\n\n  componentDidMount = () => {\n    this.props.client\n      .query({\n        query: genreList\n      })\n      .then(({ data }) => {\n        this.setState({ genres: data.demoValues });\n      });\n    this.props.client\n      .query({\n        query: moodList\n      })\n      .then(({ data }) => {\n        this.setState({ moods: data.demoValues });\n      });\n  };\n\n  // получить количество песен\n  loadSongs = () => {\n    const valueIds = [];\n    this.state.selectedTypes.forEach(item => {\n      valueIds.push(item.id);\n    });\n    this.props.client\n      .query({\n        query: songsCount,\n        variables: { valueIds }\n      })\n      .then(({ data }) => this.setState({ songs: data.demoMediafilesCount }));\n  };\n\n  handleShowChildren = tag => {\n    this.setState({\n      showChildren: true,\n      parent: tag\n    });\n  };\n\n  handleHideChildren = () => {\n    this.setState({\n      showChildren: false,\n      childs: {\n        title: \"\",\n        items: []\n      }\n    });\n  };\n\n  getGenres = () => {\n    const { showChildren, genres, parent } = this.state;\n    if (!showChildren) {\n      return genres;\n    } else {\n      return parent.childs;\n    }\n  };\n\n  render() {\n    const {\n      moods,\n      currentTab,\n      selectedTypes,\n      songs,\n      showChildren,\n      parent\n    } = this.state;\n\n    return (\n      <div className=\"tags\">\n        <h1>Музыка для баров и ресторанов → Утренний музыкальный блок</h1>\n        <h2>Укажите подходящие характеристики для музыкального блока</h2>\n        <SelectTab\n          genreIcon={genreIcon}\n          moodIcon={moodIcon}\n          currentTab={currentTab}\n          handleActiveTab={this.handleActiveTab}\n        />\n\n        {currentTab === \"genres\" && (\n          <GenreTab\n            handleAddType={this.handleAddType}\n            handleRemoveType={this.handleRemoveType}\n            listIcon={listIcon}\n            genres={this.getGenres()}\n            showChildren={showChildren}\n            handleShowChildren={this.handleShowChildren}\n            handleHideChildren={this.handleHideChildren}\n            parent={parent}\n          />\n        )}\n\n        {currentTab === \"mood\" && (\n          <MoodTab\n            moods={moods}\n            handleAddType={this.handleAddType}\n            handleRemoveType={this.handleRemoveType}\n          />\n        )}\n\n        {selectedTypes.length !== 0 && (\n          <SelectedTags\n            selectedTypes={selectedTypes}\n            handleRemoveType={this.handleRemoveType}\n          />\n        )}\n\n        {selectedTypes.length !== 0 && <Songs songs={songs} />}\n      </div>\n    );\n  }\n}\n\nexport default withApollo(Tags);\n","import React, { Component } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Tags from \"./components/Tags\";\n\nconst client = new ApolloClient({\n  uri: \"http://admin.mv.muz-lab.ru/api/v1/graphql/\",\n  credentials: \"same-origin\"\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Tags />\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}